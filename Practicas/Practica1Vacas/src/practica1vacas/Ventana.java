/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1vacas;

import Estructuras.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Byron Alvarez
 */
public class Ventana extends javax.swing.JFrame {

    ListaDobleEnlazada lista = new ListaDobleEnlazada();
    ListaSimplePasajeros listaPasajeros = new ListaSimplePasajeros();
    ListaCircularDoble listaMaletas = new ListaCircularDoble();
    ListaSimpleMantenimiento listaMantenimiento = lista.listaMante;

// = new ListaSimpleMantenimiento();
    Cola colaa = lista.cola;
    int turnos = 1;
    int nAviones = 1;
    int maletasss = 1;
    int elimM = 1;
    int nombreEsta = 1;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        jTextArea1.setEditable(false);
        verificarTurnos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Numero de Aviones");

        jLabel2.setText("Numero de Estaciones");

        jButton1.setText("Siguiente Turno");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Empezar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        //  lista.listar();
        eliminarPasajeros();

        mostrar();
        //  listaMaletas.insertarAlFinal(0);
        //  System.out.println(listaMaletas.getCabeza().getMaletas());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        while (listaMantenimiento.getTamanio() < Integer.parseInt(jTextField2.getText())) {
            for (int i = 0; i < Integer.parseInt(jTextField2.getText()); i++) {
                listaMantenimiento.agregarAlFinal();
                nombreEsta = nombreEsta + 1;

            }
        }
        for (int i = 0; i < Integer.parseInt(jTextField1.getText()); i++) {
            ingresarAviones();
        }
        mostrar();
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    public void verificarTurnos() {
        jButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                if (arg0.getSource().equals(jButton1)) {
                    System.out.println("Presionaste");
                    
                    listaMantenimiento.restarTurnoMante();
                    try {
                        lista.restarTurnoDes();
                        //       try {
                        //             listaMantenimiento.obtenerDesocupado().setEstacion(new Estaciones(colaa.quitar()));
                        //         } catch (Exception ex) {
                        // Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                        //          }
                    } catch (Exception ex) {
                    //    Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
    }

    public void ingresarAviones() {
        int nRandomTipo = (int) Math.floor(Math.random() * 3 + 1);
        if (nRandomTipo == 1) {
            //int nRandomDes = (int) Math.floor(Math.random() * 6 + 5);
            int nRandomMan = (int) Math.floor(Math.random() * 3 + 1);
            int pasa = (int) Math.floor(Math.random() * 6 + 5);
            //lista.insertarCabezaLista(new Aviones(nRandomTipo, new Pasajeros(), 1, nRandomMan));
            lista.insertarAlFinal(new Aviones(nRandomTipo, pasa, 1, nRandomMan));
            agregarPasajeros(pasa);
        } else if (nRandomTipo == 2) {
            //int nRandomDes = (int) Math.floor(Math.random() * 11 + 15);
            int nRandomMan = (int) Math.floor(Math.random() * 3 + 2);
            int pasa = (int) Math.floor(Math.random() * 11 + 15);
            //  lista.insertarCabezaLista(new Aviones(nRandomTipo, new Pasajeros(), 2, nRandomMan));
            lista.insertarAlFinal(new Aviones(nRandomTipo, pasa, 2, nRandomMan));
            agregarPasajeros(pasa);
        } else if (nRandomTipo == 3) {
            //int nRandomDes = (int) Math.floor(Math.random() * 11 + 15);
            int nRandomMan = (int) Math.floor(Math.random() * 4 + 3);
            int pasa = (int) Math.floor(Math.random() * 11 + 30);
            //    lista.insertarCabezaLista(new Aviones(nRandomTipo, new Pasajeros(), 3, nRandomMan));
            lista.insertarAlFinal(new Aviones(nRandomTipo, pasa, 3, nRandomMan));
            agregarPasajeros(pasa);
        }
    }

    public void agregarPasajeros(int cantidad) {
        for (int i = 0; i < cantidad; i++) {
            int maletas = (int) Math.floor(Math.random() * 4 + 1);
            int documentos = (int) Math.floor(Math.random() * 10 + 1);
            listaPasajeros.insertaralFinal(new Pasajeros(maletas, documentos));
            agregarMaletas(maletas);
        }
    }

    public void agregarMaletas(int cantidad) {
        for (int i = 0; i < cantidad; i++) {
            listaMaletas.insertarAlFinal(maletasss);
            maletasss = maletasss + 1;
        }
    }

    public void eliminarMaletas(int cantidad) {
        for (int j = 0; j < cantidad; j++) {
            listaMaletas.eliminar(elimM);
            // System.out.println(cantidad);
            elimM = elimM + 1;
        }
    }

    public void eliminarPasajeros() {

        for (int i = 0; i < 5; i++) {
            if (listaPasajeros.getCabeza() == null) {
            } else {
                eliminarMaletas(listaPasajeros.getCabeza().getPasajero().getMaletas());
                listaPasajeros.eliminar(listaPasajeros.getCabeza().getPasajero());
            }

        }

    }

    public void mostrar() {
        jTextArea1.append("+++++++++++++" + "TURNO" + turnos + "+++++++++++++" + "\n");
        jTextArea1.append("**********" + "AVIONES" + "**********" + "\n");

        Nodo_ListaDobleEnlazada aux;
        aux = lista.getCabeza();
        Nodo_ListaSimplePasajeros auxP;
        auxP = listaPasajeros.getCabeza();
        Nodo_ListaCircularDoble auxM;
        auxM = listaMaletas.getCabeza();
        Nodo_ListaSimpleMantenimiento auxMante;
        auxMante = listaMantenimiento.getCabeza();
        Nodo_Cola auxC;
        auxC = colaa.getCabeza();

        while (aux != null) {
            jTextArea1.append("\t----" + aux.getAvion().getNombre() + "-----" + "\n");

            if (aux.getAvion().getTipo() == 1) {

                jTextArea1.append("\tTipo: Pequeno" + "\n\tPasajeros: "
                        + aux.getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + aux.getAvion().getTurnosDesabordaje() + "\n\tMantenimietno: "
                        + aux.getAvion().getTurnosMante() + "\n");
            } else if (aux.getAvion().getTipo() == 2) {

                jTextArea1.append("\tTipo: Mediano" + "\n\tPasajeros: "
                        + aux.getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + aux.getAvion().getTurnosDesabordaje() + "\n\tMantenimietno: "
                        + aux.getAvion().getTurnosMante() + "\n");
            } else if (aux.getAvion().getTipo() == 3) {

                jTextArea1.append("\tTipo: Grande" + "\n\tPasajeros: "
                        + aux.getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + aux.getAvion().getTurnosDesabordaje() + "\n\tMantenimietno: "
                        + aux.getAvion().getTurnosMante() + "\n");
            }

            aux = aux.getSiguiente();
        }
        
        /*
        jTextArea1.append("**********" + "PASAJEROS" + "**********" + "\n");
        while (auxP != null) {
            jTextArea1.append("\t----" + auxP.getPasajero().getNombre() + "-----");

            jTextArea1.append("\n\tMaletas: "
                    + auxP.getPasajero().getMaletas() + "\n\tDocumentos: "
                    + auxP.getPasajero().getDocumentos() + "\n");
            auxP = auxP.getSiguiente();
        }
        jTextArea1.append("**********" + "MALETAS" + "**********" + "\n");

        do {
            if (auxM != null) {
                jTextArea1.append("\t----" + "Maleta " + auxM.getMaletas() + "-----" + "\n");

                auxM = auxM.getSiguiente();
            }

        } while (auxM != listaMaletas.getCabeza());
*/
        jTextArea1.append("**********" + "ESTACIONES" + "**********" + "\n");

        while (auxMante != null) {
            jTextArea1.append("\t----" + auxMante.getEstacion().getNombre() + "-----");

            if (auxMante.getEstacion().getAvion() == null) {
                jTextArea1.append("\n\tEstado: "
                        + auxMante.getEstacion().isOcupado() + "\n\tAvion: "
                        + "Vacio" + "\n\tTipo: "
                        + "Vacio" + "\n\tPasajeros: "
                        + "Vacio" + "\n\tDesabordaje: "
                        + "Vacio" + "\n\tMantenimiento: "
                        + "Vacio" + "\n");
            } else {
                jTextArea1.append("\n\tEstado: "
                        + auxMante.getEstacion().isOcupado() + "\n\tAvion: "
                        + auxMante.getEstacion().getAvion().getNombre() + "\n\tTipo: "
                        + auxMante.getEstacion().getAvion().getTipo() + "\n\tPasajeros: "
                        + auxMante.getEstacion().getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + auxMante.getEstacion().getAvion().getTurnosDesabordaje() + "\n\tMantenimiento: "
                        + auxMante.getEstacion().getAvion().getTurnosMante() + "\n");
            }

            auxMante = auxMante.getSiguiente();
        }
        jTextArea1.append("\t----" + "Cola" + "-----" + "\n");

        while (auxC != null) {

            jTextArea1.append("\n\tAvion: "
                    + auxC.getAvion().getNombre() + "\n\tTipo: "
                    + auxC.getAvion().getTipo() + "\n\tPasajeros: "
                    + auxC.getAvion().getPasajeros() + "\n\tDesabordaje: "
                    + auxC.getAvion().getTurnosDesabordaje() + "\n\tMantenimiento: "
                    + auxC.getAvion().getTurnosMante() + "\n");

            auxC = auxC.getSiguiente();
        }

        turnos = turnos + 1;
        nAviones = nAviones + 1;
    }

}
