/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1vacas;

import Estructuras.*;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Byron Alvarez
 */
public class Ventana extends javax.swing.JFrame {

    ListaDobleEnlazada lista = new ListaDobleEnlazada();
    ListaSimplePasajeros listaPasajeros = new ListaSimplePasajeros();
    ListaCircularDoble listaMaletas = new ListaCircularDoble();
    ListaSimpleMantenimiento listaMantenimiento = lista.listaMante;
    ListaDobleEscritorio listaEscritorios = new ListaDobleEscritorio();
    ColaEscritorio cola;
    PilaEscritorios pila;
    Graficas grafi = new Graficas();

// = new ListaSimpleMantenimiento();
    Cola colaa = lista.cola;
    int turnos = 1;
    int nAviones = 1;
    int maletasss = 1;
    int elimM = 1;
    int nombreEsta = 1;
    int documentos = 1;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        jTextArea1.setEditable(false);
        verificarTurnos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Numero de Aviones");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Numero de Estaciones");

        jButton2.setText("Empezar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Siguiente Turno");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jLabel3.setText("Numero de Escritorios");

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane7.setViewportView(jTextArea5);

        jTextArea6.setColumns(20);
        jTextArea6.setRows(5);
        jScrollPane12.setViewportView(jTextArea6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)
                        .addGap(97, 97, 97)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton2)
                                        .addComponent(jLabel2))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))))
                        .addGap(292, 292, 292)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(jScrollPane12))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane12))
                .addContainerGap())
        );

        jTabbedPane1.addTab("General", jPanel1);

        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jTabbedPane1.addTab("Aviones", jLabel5);

        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane5.setViewportView(jLabel8);

        jTabbedPane1.addTab("Pasajeros", jScrollPane5);

        jLabel4.setToolTipText("");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane8.setViewportView(jLabel4);

        jTabbedPane1.addTab("Maletas", jScrollPane8);

        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane9.setViewportView(jLabel6);

        jTabbedPane1.addTab("Escritorios", jScrollPane9);

        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane10.setViewportView(jLabel7);

        jTabbedPane1.addTab("Mantenimiento", jScrollPane10);

        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane11.setViewportView(jLabel10);

        jTabbedPane1.addTab("Todo", jScrollPane11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1061, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("tab1");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        //  lista.listar();
        if (Integer.parseInt(jTextField1.getText()) >= nAviones) {
            ingresarAviones();
        }

        eliminarPasajeros();
        mostrar();
        generarImagenes();

//  listaMaletas.insertarAlFinal(0);
        //  System.out.println(listaMaletas.getCabeza().getMaletas());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        while (listaMantenimiento.getTamanio() < Integer.parseInt(jTextField2.getText())) {
            for (int i = 0; i < Integer.parseInt(jTextField2.getText()); i++) {
                listaMantenimiento.agregarAlFinal();
            }
        }
        while (listaEscritorios.getTamanio() < Integer.parseInt(jTextField3.getText())) {
            for (int i = 0; i < Integer.parseInt(jTextField3.getText()); i++) {
                cola = new ColaEscritorio();
                pila = new PilaEscritorios();
                listaEscritorios.insertarAlFinal(new Escritorios(cola, pila));
            }
        }
        // for (int i = 0; i < Integer.parseInt(jTextField1.getText()); i++) {
        ingresarAviones();
        // }
        mostrar();
        jButton2.setEnabled(false);
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);

        generarImagenes();

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    public void generarImagenes() {

        grafi.crearDot("listaDoble", lista.getCabeza());
        grafi.crearDotSimple("listaP", listaPasajeros.getCabeza());
        grafi.crearDotCircular("listaC", listaMaletas.getCabeza());
        grafi.crearDotEscri("listaEs", listaEscritorios.getCabeza());
        grafi.crearDotServi("listaM", listaMantenimiento.getCabeza(),colaa.getCabeza());
        
        grafi.crearDotTodo("listaT", lista.getCabeza(), listaPasajeros.getCabeza(),listaMaletas.getCabeza()
                , listaMantenimiento.getCabeza(), listaEscritorios.getCabeza(), colaa.getCabeza());

        grafi.generarImagen("listaDoble.dot", "listaDoble.png");
        grafi.generarImagen("listaP.dot", "listaP.png");
        grafi.generarImagen("listaC.dot", "listaC.png");
        grafi.generarImagen("listaEs.dot", "listaEs.png");
        grafi.generarImagen("listaM.dot", "listaM.png");
        grafi.generarImagen("listaT.dot", "listaT.png");

        ImageIcon imageIcon = new ImageIcon("C:\\Users\\Byron Alvarez\\Documents\\NetBeansProjects\\Proyecto02_Vacas\\listaDoble.png");
        Image imagen = imageIcon.getImage();
        Image imgtam = imagen.getScaledInstance(imageIcon.getIconWidth(), imageIcon.getIconHeight(), Image.SCALE_SMOOTH);
        ImageIcon per = new ImageIcon(imgtam);

        ImageIcon imageIcon2 = new ImageIcon("C:\\Users\\Byron Alvarez\\Documents\\NetBeansProjects\\Proyecto02_Vacas\\listaP.png");
        Image imagen2 = imageIcon2.getImage();
        Image imgtam2 = imagen2.getScaledInstance(imageIcon2.getIconWidth(), imageIcon2.getIconHeight(), Image.SCALE_SMOOTH);
        ImageIcon per2 = new ImageIcon(imgtam2);

        ImageIcon imageIcon3 = new ImageIcon("C:\\Users\\Byron Alvarez\\Documents\\NetBeansProjects\\Proyecto02_Vacas\\listaC.png");
        Image imagen3 = imageIcon3.getImage();
        //Image imgtam3 = imagen3.getScaledInstance(jLabel9.getWidth(), jLabel9.getHeight(), Image.SCALE_SMOOTH);
        Image imgtam3 = imagen3.getScaledInstance(imageIcon3.getIconWidth(), imageIcon3.getIconHeight(), Image.SCALE_SMOOTH);
        ImageIcon per3 = new ImageIcon(imgtam3);
        
        ImageIcon imageIcon4 = new ImageIcon("C:\\Users\\Byron Alvarez\\Documents\\NetBeansProjects\\Proyecto02_Vacas\\listaEs.png");
        Image imagen4 = imageIcon4.getImage();
        Image imgtam4 = imagen4.getScaledInstance(jLabel6.getWidth(), jLabel6.getHeight(), Image.SCALE_SMOOTH);
      //  Image imgtam4 = imagen4.getScaledInstance(imageIcon4.getIconWidth(),imageIcon4.getIconHeight(), Image.SCALE_SMOOTH);
        ImageIcon per4 = new ImageIcon(imgtam4);
        
        ImageIcon imageIcon5 = new ImageIcon("C:\\Users\\Byron Alvarez\\Documents\\NetBeansProjects\\Proyecto02_Vacas\\listaM.png");
        Image imagen5 = imageIcon5.getImage();
        //Image imgtam5 = imagen5.getScaledInstance(jLabel7.getWidth(), jLabel7.getHeight(), Image.SCALE_SMOOTH);
        Image imgtam5 = imagen5.getScaledInstance(imageIcon5.getIconWidth(),imageIcon5.getIconHeight(), Image.SCALE_SMOOTH);
        ImageIcon per5 = new ImageIcon(imgtam5);

        ImageIcon imageIcon6 = new ImageIcon("C:\\Users\\Byron Alvarez\\Documents\\NetBeansProjects\\Proyecto02_Vacas\\listaT.png");
        Image imagen6 = imageIcon6.getImage();
        //Image imgtam6 = imagen6.getScaledInstance(jLabel10.getWidth(), jLabel10.getHeight(), Image.SCALE_SMOOTH);
        Image imgtam6 = imagen6.getScaledInstance(imageIcon6.getIconWidth(),imageIcon6.getIconHeight(), Image.SCALE_SMOOTH);
        
        ImageIcon per6 = new ImageIcon(imgtam6);
        jLabel5.setIcon(per);
        jLabel8.setIcon(per2);
        jLabel4.setIcon(per3);
        jLabel6.setIcon(per4);
        jLabel7.setIcon(per5);
        jLabel10.setIcon(per6);

        per.getImage().flush();
        per2.getImage().flush();
        per3.getImage().flush();
        per4.getImage().flush();
        per5.getImage().flush();
        per6.getImage().flush();
    }

    public void restarMante() {
        Nodo_ListaSimpleMantenimiento aux;
        aux = listaMantenimiento.getCabeza();
        while (aux != null) {
            if (aux.getEstacion().getAvion() != null) {
                aux.getEstacion().getAvion().setTurnosMante(aux.getEstacion().getAvion().getTurnosMante() - 1);
                if (aux.getEstacion().getAvion().getTurnosMante() == 0) {
                    if (!lista.cola.esVacia()) {
                        try {
                            aux.setEstacion(new Estaciones(lista.cola.quitar()));
                        } catch (Exception ex) {
                            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else if (lista.cola.esVacia()) {
                        aux.setEstacion(new Estaciones());
                    }
                    //  aux.setEstacion(new Estaciones());
                    /*
                    if (obtenerDesocupado() != null) {
                         if (!cola.esVacia()) {
                             obtenerDesocupado().setEstacion(new Estaciones(cola.quitar()));
                         } else {
                    obtenerDesocupado().setEstacion(new Estaciones(aux.getAvion()));
                        }
                } else {
                    cola.insertar(aux.getAvion());
                }
                     */
                }
            } else {
            }
            aux = aux.getSiguiente();
        }
    }

    public void verificarTurnos() {
        jButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                if (arg0.getSource().equals(jButton1)) {

                    //  listaMantenimiento.restarTurnoMante();
                    restarMante();
                    try {

                        lista.restarTurnoDes();
                        //       try {
                        //             listaMantenimiento.obtenerDesocupado().setEstacion(new Estaciones(colaa.quitar()));
                        //         } catch (Exception ex) {
                        // Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                        //          }
                    } catch (Exception ex) {
                        //    Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("bbb");
                }
            }
        });
    }

    public void ingresarAviones() {
        int nRandomTipo = (int) Math.floor(Math.random() * 3 + 1);
        if (nRandomTipo == 1) {
            //int nRandomDes = (int) Math.floor(Math.random() * 6 + 5);
            int nRandomMan = (int) Math.floor(Math.random() * 3 + 1);
            int pasa = (int) Math.floor(Math.random() * 6 + 5);
            //lista.insertarCabezaLista(new Aviones(nRandomTipo, new Pasajeros(), 1, nRandomMan));
            lista.insertarAlFinal(new Aviones(nRandomTipo, pasa, 1, nRandomMan));
            agregarPasajeros(pasa);
        } else if (nRandomTipo == 2) {
            //int nRandomDes = (int) Math.floor(Math.random() * 11 + 15);
            int nRandomMan = (int) Math.floor(Math.random() * 3 + 2);
            int pasa = (int) Math.floor(Math.random() * 11 + 15);
            //  lista.insertarCabezaLista(new Aviones(nRandomTipo, new Pasajeros(), 2, nRandomMan));
            lista.insertarAlFinal(new Aviones(nRandomTipo, pasa, 2, nRandomMan));
            agregarPasajeros(pasa);
        } else if (nRandomTipo == 3) {
            //int nRandomDes = (int) Math.floor(Math.random() * 11 + 15);
            int nRandomMan = (int) Math.floor(Math.random() * 4 + 3);
            int pasa = (int) Math.floor(Math.random() * 11 + 30);
            //    lista.insertarCabezaLista(new Aviones(nRandomTipo, new Pasajeros(), 3, nRandomMan));
            lista.insertarAlFinal(new Aviones(nRandomTipo, pasa, 3, nRandomMan));
            agregarPasajeros(pasa);
        }
    }

    public void agregarPasajeros(int cantidad) {
        for (int i = 0; i < cantidad; i++) {
            int maletas = (int) Math.floor(Math.random() * 4 + 1);
            int documentos = (int) Math.floor(Math.random() * 10 + 1);
            int registro = (int) Math.floor(Math.random() * 3 + 1);

            listaPasajeros.insertaralFinal(new Pasajeros(maletas, documentos, registro));
            agregarMaletas(maletas);
        }
    }

    public void agregarMaletas(int cantidad) {
        for (int i = 0; i < cantidad; i++) {
            listaMaletas.insertarAlFinal(maletasss);
            maletasss = maletasss + 1;
        }
    }

    public void eliminarMaletas(int cantidad) {
        for (int j = 0; j < cantidad; j++) {
            listaMaletas.eliminar(elimM);
            // System.out.println(cantidad);
            elimM = elimM + 1;
        }
    }

    public void eliminarPasajeros() {

        Nodo_ListaEscritorios aux = listaEscritorios.getCabeza();
        restarTurnoEscritorio();

        for (int i = 0; i < 5; i++) {
            if (listaPasajeros.getCabeza() == null) {
            } else {
                //    System.out.println(aux.getEscritorio().getCola().getTamanio());
                //  while (aux !=null) {
                if (aux != null && aux.getEscritorio().getPasajero() == null) {
                    aux.getEscritorio().setPasajero(listaPasajeros.getCabeza().getPasajero());

                    for (int j = 0; j < listaPasajeros.getCabeza().getPasajero().getDocumentos(); j++) {
                        aux.getEscritorio().getPila().insertar(documentos);
                        documentos = documentos + 1;
                    }

                    //  aux.getEscritorio().getPila().insertar(listaPasajeros.getCabeza().getPasajero().getDocumentos());
                } else if (aux != null) {
                    if (aux.getEscritorio().getCola().getTamanio() >= 7) {
                        aux = aux.getSiguiente();
                    }
                    if (aux != null && aux.getEscritorio().getCola().getTamanio() < 7) {
                        aux.getEscritorio().getCola().insertar(listaPasajeros.getCabeza().getPasajero());
                    } else {

                    }
                }
                // if (aux != null) {
                //     aux.getEscritorio().getCola().insertar(listaPasajeros.getCabeza().getPasajero());
                // } else {

                // }
                //       }
                eliminarMaletas(listaPasajeros.getCabeza().getPasajero().getMaletas());
                listaPasajeros.eliminar(listaPasajeros.getCabeza().getPasajero());
            }

        }

    }

    public void restarTurnoEscritorio() {
        Nodo_ListaEscritorios aux;
        aux = listaEscritorios.getCabeza();
        while (aux != null) {
            if (aux.getEscritorio().getPasajero() != null) {
                aux.getEscritorio().getPasajero().setRegistro(aux.getEscritorio().getPasajero().getRegistro() - 1);

                if (aux.getEscritorio().getPasajero().getRegistro() == 0) {

                    if (aux.getEscritorio().getCola().esVacia()) {
                        aux.getEscritorio().setPasajero(null);
                    } else {
                        try {
                            aux.getEscritorio().setPasajero(aux.getEscritorio().getCola().quitar());
                        } catch (Exception ex) {
                        }
                    }

                }

            }
            aux = aux.getSiguiente();
        }
    }

    public void mostrar() {
        jTextArea1.append("+++++++++++++" + "TURNO" + turnos + "+++++++++++++" + "\n");
        jTextArea1.append("**********" + "AVIONES" + "**********" + "\n");

        Nodo_ListaDobleEnlazada aux;
        aux = lista.getCabeza();
        Nodo_ListaSimplePasajeros auxP;
        auxP = listaPasajeros.getCabeza();
        Nodo_ListaCircularDoble auxM;
        auxM = listaMaletas.getCabeza();
        Nodo_ListaSimpleMantenimiento auxMante;
        auxMante = listaMantenimiento.getCabeza();
        Nodo_Cola auxC;
        auxC = colaa.getCabeza();
        Nodo_ListaEscritorios auxE;
        auxE = listaEscritorios.getCabeza();

        while (aux != null) {
            jTextArea1.append("\t----" + aux.getAvion().getNombre() + "-----" + "\n");

            if (aux.getAvion().getTipo() == 1) {

                jTextArea1.append("\tTipo: Pequeno" + "\n\tPasajeros: "
                        + aux.getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + aux.getAvion().getTurnosDesabordaje() + "\n\tMantenimietno: "
                        + aux.getAvion().getTurnosMante() + "\n");
            } else if (aux.getAvion().getTipo() == 2) {

                jTextArea1.append("\tTipo: Mediano" + "\n\tPasajeros: "
                        + aux.getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + aux.getAvion().getTurnosDesabordaje() + "\n\tMantenimietno: "
                        + aux.getAvion().getTurnosMante() + "\n");
            } else if (aux.getAvion().getTipo() == 3) {

                jTextArea1.append("\tTipo: Grande" + "\n\tPasajeros: "
                        + aux.getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + aux.getAvion().getTurnosDesabordaje() + "\n\tMantenimietno: "
                        + aux.getAvion().getTurnosMante() + "\n");
            }

            aux = aux.getSiguiente();
        }

        jTextArea2.append("**********" + "PASAJEROS" + "**********" + "\n");
        while (auxP != null) {
            jTextArea2.append("\t----" + auxP.getPasajero().getNombre() + "-----");

            jTextArea2.append("\n\tMaletas: "
                    + auxP.getPasajero().getMaletas() + "\n\tDocumentos: "
                    + auxP.getPasajero().getDocumentos() 
                    + "\n\tRegistro: "
                    + auxP.getPasajero().getRegistro()
                    + "\n");
            auxP = auxP.getSiguiente();
        }
        jTextArea3.append("**********" + "MALETAS" + "**********" + "\n");

        do {
            if (auxM != null) {
                jTextArea3.append("\t----" + "Maleta " + auxM.getMaletas() + "-----" + "\n");

                auxM = auxM.getSiguiente();
            }

        } while (auxM != listaMaletas.getCabeza());

        jTextArea4.append("**********" + "ESTACIONES" + "**********" + "\n");

        while (auxMante != null) {
            jTextArea4.append("\t----" + auxMante.getEstacion().getNombre() + "-----");

            if (auxMante.getEstacion().getAvion() == null) {
                jTextArea4.append("\n\tEstado: "
                        + auxMante.getEstacion().isOcupado() + "\n\tAvion: "
                        + "Vacio" + "\n\tTipo: "
                        + "Vacio" + "\n\tPasajeros: "
                        + "Vacio" + "\n\tDesabordaje: "
                        + "Vacio" + "\n\tMantenimiento: "
                        + "Vacio" + "\n");
            } else {
                jTextArea4.append("\n\tEstado: "
                        + auxMante.getEstacion().isOcupado() + "\n\tAvion: "
                        + auxMante.getEstacion().getAvion().getNombre() + "\n\tTipo: "
                        + auxMante.getEstacion().getAvion().getTipo() + "\n\tPasajeros: "
                        + auxMante.getEstacion().getAvion().getPasajeros() + "\n\tDesabordaje: "
                        + auxMante.getEstacion().getAvion().getTurnosDesabordaje() + "\n\tMantenimiento: "
                        + auxMante.getEstacion().getAvion().getTurnosMante() + "\n");
            }

            auxMante = auxMante.getSiguiente();
        }
        jTextArea4.append("\t----" + "Cola" + "-----" + "\n");

        while (auxC != null) {

            jTextArea4.append("\n\tAvion: "
                    + auxC.getAvion().getNombre() + "\n\tTipo: "
                    + auxC.getAvion().getTipo() + "\n\tPasajeros: "
                    + auxC.getAvion().getPasajeros() + "\n\tDesabordaje: "
                    + auxC.getAvion().getTurnosDesabordaje() + "\n\tMantenimiento: "
                    + auxC.getAvion().getTurnosMante() + "\n");

            auxC = auxC.getSiguiente();
        }

        jTextArea6.append("\t----" + "Pila Documentos" + "-----" + "\n");

        while (auxE != null) {
            jTextArea5.append("\n\t----" + auxE.getEscritorio().getNombre() + "-----" + "\n");
            //Nodo_ColaEscritorios auxCC = auxE.getEscritorio().getCola().getCabeza();

            if (auxE.getEscritorio().getPasajero() == null) {
                jTextArea5.append("\t\n\tPasajero: "
                        + "Vacio"
                        + "\n\tMaletas:" + "Vacio"
                        + "\n\tDocumentos:" + "Vacio"
                        + "\n\tRegistro:" + "Vacio"
                        + "\n");
            } else {
                jTextArea5.append("\t\n\tPasajero: "
                        + auxE.getEscritorio().getPasajero().getNombre()
                        + "\n\tMaletas:" + auxE.getEscritorio().getPasajero().getMaletas()
                        + "\n\tDocumentos:" + auxE.getEscritorio().getPasajero().getDocumentos()
                        + "\n\tRegistro:" + auxE.getEscritorio().getPasajero().getRegistro()
                        + "\n");

            }

            jTextArea5.append("\t----" + "Cola" + "-----" + "\n");

            Nodo_ColaEscritorios auxCC = auxE.getEscritorio().getCola().getCabeza();

            while (auxCC != null) {
                if (auxCC.getPasajero() == null) {
                    jTextArea5.append("\n\tAvion: "
                            + "Vacio" + "\n");
                } else {
                    jTextArea5.append("\n\tAvion: "
                            + auxCC.getPasajero().getNombre() + "\n");
                }
                auxCC = auxCC.getSiguiente();
            }

            Nodo_PilaEscritorios auxPi = auxE.getEscritorio().getPila().getCabeza();
            jTextArea6.append("\n\tEscritorio: " + auxE.getEscritorio().getNombre());
            while (auxPi != null) {

                jTextArea6.append("\n\tDocumento: "
                        + auxPi.getDocumento() + "\n");

                auxPi = auxPi.getSiguiente();
            }

            auxE = auxE.getSiguiente();

        }

        turnos = turnos + 1;
        nAviones = nAviones + 1;
    }

}
